# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: AWS Log Analyzer
  description: Move your app forward with the Uber API
  version: "1.0.0"
# the domain of the service
host: localhost:8082
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
#basePath: /v1
produces:
  - application/json
paths:
  /getSystemStatus:
    get:
      # Get System status
      description: |
        Gets `SystemStatus` objects.
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SystemStatus'
  /dumpModel:
    get:
      # dump the model out
      description: |
        Gets `Cluster model` objects.
      responses:
        "200":
          description: Success
  /submitlog:
    post:
      description: Submit log
      operationId: submit Log
      produces:
        - application/json
      parameters:
        - name: log
          in: body
          description: Log feature to add
          required: true
          schema:
            $ref: '#/definitions/NewLog'
      responses:
        '200':
          description: log response
        
          
definitions:
  SystemStatus:
    type: object
    properties:
      TodayUnknownIssue:
        type: integer
        description: First name of the Uber user.
      NumCluster:
        type: integer
        description: Last name of the Uber user.
      TodayNumIssue:
        type: integer
        description: Email address of the Uber user
  NewLog:
    type: object
    properties:
      STATUS:
        type: string
        description: Status e.g. ERROR, WARN
      MESSAGE:
        type: string
        description: Error Message
      ISO_DATE:
        type: string
        description: ISO Date YYYY-MM-DD HH:MM:SS,MMM e.g. 2016-12-30 16:27:54,435
  Product:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
  PriceEstimate:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
      currency_code:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      display_name:
        type: string
        description: Display name of product.
      estimate:
        type: string
        description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
      low_estimate:
        type: number
        description: Lower bound of the estimated price.
      high_estimate:
        type: number
        description: Upper bound of the estimated price.
      surge_multiplier:
        type: number
        description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
  Profile:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      picture:
        type: string
        description: Image URL of the Uber user.
      promo_code:
        type: string
        description: Promo code of the Uber user.
  Activity:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Activities:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
